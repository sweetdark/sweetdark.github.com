<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: IT | Mario's Blog]]></title>
  <link href="http://sweetdark.github.com/blog/categories/it/atom.xml" rel="self"/>
  <link href="http://sweetdark.github.com/"/>
  <updated>2013-01-02T13:40:03+08:00</updated>
  <id>http://sweetdark.github.com/</id>
  <author>
    <name><![CDATA[Mario]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[解决问题的科学方法]]></title>
    <link href="http://sweetdark.github.com/blog/2012/12/27/solve-problem/"/>
    <updated>2012-12-27T12:15:00+08:00</updated>
    <id>http://sweetdark.github.com/blog/2012/12/27/solve-problem</id>
    <content type="html"><![CDATA[<p>科学的方法分为两种归纳法和演绎法。
归纳法就是由通过一些个别现象归纳出普遍性的结论。是一种由个别到一般的论证方法。
而演绎法则是从一般的原则推论出特定的结果。归纳法的例子：
今天早上8点多去上班发现公司还没开门，等到9点才有人来开门。明天还是8点多去，还没开门，后天还是如此。你大概会归纳出，公司没有9点是不会开门的。</p>

<p>演绎法的例子：</p>

<p>电脑的BIOS用的电，是由电池提供的。那么你设置了BIOS的设置，保存之后，发现下次进去是出厂设置。那么你可以推断，是BIOS的电池没电了。</p>

<p>遇到复杂的问题时，你先拿出一个笔记本，把所有的状况写下来，这样你就知道情况如何，问题要怎么解决。不然的话，问题会复杂到让你忘记摸不着头脑，然后忘记了该如何解决，最后只得放弃。
要把问题正确的写下来，要兼顾到六个方面：</p>


<!--more-->


<ol>
<li>问题是什么</li>
<li>假设问题的原因</li>
<li>证实每个问题的假设</li>
<li>预测实验的结果</li>
<li>观察实验的结果</li>
<li>有实验得出结论</li>
</ol>


<p> 科学方法的主要目的是让你能够准确地知道事情的真相，而不会误入歧途。每一个工程师都曾经因为没有准确地思考而大伤脑经。
 这就是为什么大部分科学和机械方面的研究总是显得非常沉闷而小心谨慎。在科学式的思考当中，第一步把问题写下来，只有你确实知道的东西才写下来。</p>

<p>1.问题应该是简单准确的。比如：在打开某个网页的时候，键盘的按键k按了没反应。不要写：键盘有什么问题。这样问题就大了，会导致你后面的假设，和证明的困难</p>

<p>2.假设想到了就可以写下来，但一眼就能看出该假设是错误的就没必要写下来。
根据上面的问题，可以产生下面的假设。</p></p>

<ul>
<li>1.浏览器出错了，识别不了键盘K？</li>
<li>2.键盘K键被其他应用截获，作为快捷键了？</li>
<li>3.键盘K键被该网页截获，作为某个功能的快捷键使用了？</li>
<li>4.电压不稳定引起的？</li>
</ul>


<p>一开始就小心谨慎地记录下来，能节省你不少时间，也不至于完全走迷了路。或者想不起来当时的所做的假设了。所以科学问题从表面上看起来往往非常枯燥，为的就是避免将来可能产生的错误.</p>

<p>3.实验证明的几个步骤
这个证明过程应该是严谨的，必须使推论合理而且准去。例如，摩托车的喇叭响了，修理人员就认为整个电路系统没问题，那么他的问题可就大了。</p>

<p>4.写结论，结论不能写的更多，也不能写的更少，力求要精确，写清楚你做了什么事，经过这个过程得出的确切结果。例如结论只是证明了，电路系统没问题。我们就不能写这辆车是没问题的</p>
]]></content>
  </entry>
  
</feed>
